{"version":3,"sources":["../src/AttributeTypeDictionary.js"],"names":["defaultValues","Map","AttributeTypeDictionary","get","oid","has","getOID","value","val","set","register","entries"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA,MAAMA,aAAa,GAAG,IAAIC,GAAJ,CAAQ,CAC7B,CAAC,UAAD,EAAa,kBAAb,CAD6B,EAE7B,CAAC,SAAD,EAAY,GAAZ,CAF6B,EAG7B,CAAC,SAAD,EAAY,IAAZ,CAH6B,EAI7B,CAAC,4BAAD,EAA+B,IAA/B,CAJ6B,EAK7B,CAAC,UAAD,EAAa,aAAb,CAL6B,EAM7B,CAAC,UAAD,EAAa,sBAAb,CAN6B,EAO7B,CAAC,UAAD,EAAa,mBAAb,CAP6B,EAQ7B,CAAC,UAAD,EAAa,aAAb,CAR6B,EAS7B,CAAC,UAAD,EAAa,qBAAb,CAT6B,EAU7B,CAAC,UAAD,EAAa,0BAAb,CAV6B,EAW7B,CAAC,UAAD,EAAa,qBAAb,CAX6B,EAY7B,CAAC,UAAD,EAAa,WAAb,CAZ6B,EAa7B,CAAC,UAAD,EAAa,iBAAb,CAb6B,EAc7B,CAAC,UAAD,EAAa,UAAb,CAd6B,EAe7B,CAAC,UAAD,EAAa,yBAAb,CAf6B,EAgB7B,CAAC,SAAD,EAAY,GAAZ,CAhB6B,EAiB7B,CAAC,UAAD,EAAa,QAAb,CAjB6B,EAkB7B,CAAC,UAAD,EAAa,MAAb,CAlB6B,EAmB7B,CAAC,UAAD,EAAa,GAAb,CAnB6B,EAoB7B,CAAC,UAAD,EAAa,IAAb,CApB6B,EAqB7B,CAAC,UAAD,EAAa,OAAb,CArB6B,EAsB7B,CAAC,UAAD,EAAa,4BAAb,CAtB6B,EAuB7B,CAAC,UAAD,EAAa,eAAb,CAvB6B,EAwB7B,CAAC,UAAD,EAAa,YAAb,CAxB6B,EAyB7B,CAAC,UAAD,EAAa,eAAb,CAzB6B,EA0B7B,CAAC,UAAD,EAAa,yBAAb,CA1B6B,EA2B7B,CAAC,UAAD,EAAa,mBAAb,CA3B6B,EA4B7B,CAAC,UAAD,EAAa,cAAb,CA5B6B,EA6B7B,CAAC,UAAD,EAAa,aAAb,CA7B6B,EA8B7B,CAAC,UAAD,EAAa,SAAb,CA9B6B,EA+B7B,CAAC,SAAD,EAAY,cAAZ,CA/B6B,EAgC7B,CAAC,SAAD,EAAY,IAAZ,CAhC6B,EAiC7B,CAAC,SAAD,EAAY,IAAZ,CAjC6B,EAkC7B,CAAC,SAAD,EAAY,QAAZ,CAlC6B,EAmC7B,CAAC,UAAD,EAAa,iBAAb,CAnC6B,EAoC7B,CAAC,UAAD,EAAa,2BAAb,CApC6B,EAqC7B,CAAC,UAAD,EAAa,aAAb,CArC6B,EAsC7B,CAAC,UAAD,EAAa,OAAb,CAtC6B,EAuC7B,CAAC,2BAAD,EAA8B,KAA9B,CAvC6B,EAwC7B,CAAC,UAAD,EAAa,cAAb,CAxC6B,EAyC7B,CAAC,UAAD,EAAa,cAAb,CAzC6B,EA0C7B,CAAC,UAAD,EAAa,aAAb,CA1C6B,EA2C7B,CAAC,UAAD,EAAa,sBAAb,CA3C6B,EA4C7B,CAAC,UAAD,EAAa,oBAAb,CA5C6B,EA6C7B,CAAC,SAAD,EAAY,SAAZ,CA7C6B,EA8C7B,CAAC,sBAAD,EAAyB,UAAzB,CA9C6B,EA+C7B,CAAC,UAAD,EAAa,QAAb,CA/C6B,EAgD7B,CAAC,SAAD,EAAY,cAAZ,CAhD6B,EAiD7B,CAAC,UAAD,EAAa,oBAAb,CAjD6B,EAkD7B,CAAC,SAAD,EAAY,UAAZ,CAlD6B,EAmD7B,CAAC,SAAD,EAAY,cAAZ,CAnD6B,EAoD7B,CAAC,SAAD,EAAY,sBAAZ,CApD6B,EAqD7B,CAAC,SAAD,EAAY,oBAAZ,CArD6B,EAsD7B,CAAC,SAAD,EAAY,oBAAZ,CAtD6B,EAuD7B,CAAC,SAAD,EAAY,QAAZ,CAvD6B,EAwD7B,CAAC,UAAD,EAAa,mBAAb,CAxD6B,EAyD7B,CAAC,eAAD,EAAkB,WAAlB,CAzD6B,CAAR,CAAtB;AA4DA;AACA;AACA;;AACe,MAAMC,uBAAN,CACf;AACC;AACD;AACA;AACA;AACA;AACW,SAAHC,GAAG,CAACC,GAAD,EACV;AACC,QAAG,CAACJ,aAAa,CAACK,GAAd,CAAkBD,GAAlB,CAAJ,EACA;AACC,aAAOA,GAAP;AACA;;AACD,WAAOJ,aAAa,CAACG,GAAd,CAAkBC,GAAlB,CAAP;AACA;AAED;AACD;AACA;AACA;AACA;;;AACc,SAANE,MAAM,CAACC,KAAD,EACb;AAAA,+CACyBP,aADzB;AAAA;;AAAA;AACC,0DACA;AAAA;AAAA,cADWI,GACX;AAAA,cADgBI,GAChB;;AACC,YAAGA,GAAG,KAAKD,KAAX,EACA;AACC,iBAAOH,GAAP;AACA;AACD;AAPF;AAAA;AAAA;AAAA;AAAA;;AAQC,WAAO,IAAP;AACA;AAED;AACD;AACA;AACA;AACA;;;AACW,SAAHK,GAAG,CAACL,GAAD,EAAMG,KAAN,EACV;AACCP,IAAAA,aAAa,CAACS,GAAd,CAAkBL,GAAlB,EAAuBG,KAAvB;AACA;AAED;AACD;AACA;AACA;AACA;;;AACgB,SAARG,QAAQ,CAACC,OAAD,EACf;AAAA,gDAC2BA,OAD3B;AAAA;;AAAA;AACC,6DACA;AAAA;AAAA,cADWP,GACX;AAAA,cADgBG,KAChB;;AACCL,QAAAA,uBAAuB,CAACO,GAAxB,CAA4BL,GAA5B,EAAiCG,KAAjC;AACA;AAJF;AAAA;AAAA;AAAA;AAAA;AAKC;;AArDF","sourcesContent":["//**************************************************************************************\r\nconst defaultValues = new Map([\r\n\t[\"2.5.4.15\", \"businessCategory\"],\r\n\t[\"2.5.4.6\", \"C\"],\r\n\t[\"2.5.4.3\", \"CN\"],\r\n\t[\"0.9.2342.19200300.100.1.25\", \"DC\"],\r\n\t[\"2.5.4.13\", \"description\"],\r\n\t[\"2.5.4.27\", \"destinationIndicator\"],\r\n\t[\"2.5.4.49\", \"distinguishedName\"],\r\n\t[\"2.5.4.46\", \"dnQualifier\"],\r\n\t[\"2.5.4.47\", \"enhancedSearchGuide\"],\r\n\t[\"2.5.4.23\", \"facsimileTelephoneNumber\"],\r\n\t[\"2.5.4.44\", \"generationQualifier\"],\r\n\t[\"2.5.4.42\", \"givenName\"],\r\n\t[\"2.5.4.51\", \"houseIdentifier\"],\r\n\t[\"2.5.4.43\", \"initials\"],\r\n\t[\"2.5.4.25\", \"internationalISDNNumber\"],\r\n\t[\"2.5.4.7\", \"L\"],\r\n\t[\"2.5.4.31\", \"member\"],\r\n\t[\"2.5.4.41\", \"name\"],\r\n\t[\"2.5.4.10\", \"O\"],\r\n\t[\"2.5.4.11\", \"OU\"],\r\n\t[\"2.5.4.32\", \"owner\"],\r\n\t[\"2.5.4.19\", \"physicalDeliveryOfficeName\"],\r\n\t[\"2.5.4.16\", \"postalAddress\"],\r\n\t[\"2.5.4.17\", \"postalCode\"],\r\n\t[\"2.5.4.18\", \"postOfficeBox\"],\r\n\t[\"2.5.4.28\", \"preferredDeliveryMethod\"],\r\n\t[\"2.5.4.26\", \"registeredAddress\"],\r\n\t[\"2.5.4.33\", \"roleOccupant\"],\r\n\t[\"2.5.4.14\", \"searchGuide\"],\r\n\t[\"2.5.4.34\", \"seeAlso\"],\r\n\t[\"2.5.4.5\", \"serialNumber\"],\r\n\t[\"2.5.4.4\", \"SN\"],\r\n\t[\"2.5.4.8\", \"ST\"],\r\n\t[\"2.5.4.9\", \"street\"],\r\n\t[\"2.5.4.20\", \"telephoneNumber\"],\r\n\t[\"2.5.4.22\", \"teletexTerminalIdentifier\"],\r\n\t[\"2.5.4.21\", \"telexNumber\"],\r\n\t[\"2.5.4.12\", \"title\"],\r\n\t[\"0.9.2342.19200300.100.1.1\", \"UID\"],\r\n\t[\"2.5.4.50\", \"uniqueMember\"],\r\n\t[\"2.5.4.35\", \"userPassword\"],\r\n\t[\"2.5.4.24\", \"x121Address\"],\r\n\t[\"2.5.4.45\", \"x500UniqueIdentifier\"],\r\n\t[\"2.5.6.11\", \"applicationProcess\"],\r\n\t[\"2.5.6.2\", \"country\"],\r\n\t[\"1.3.6.1.4.1.1466.344\", \"dcObject\"],\r\n\t[\"2.5.6.14\", \"device\"],\r\n\t[\"2.5.6.9\", \"groupOfNames\"],\r\n\t[\"2.5.6.17\", \"groupOfUniqueNames\"],\r\n\t[\"2.5.6.3\", \"locality\"],\r\n\t[\"2.5.6.4\", \"organization\"],\r\n\t[\"2.5.6.7\", \"organizationalPerson\"],\r\n\t[\"2.5.6.8\", \"organizationalRole\"],\r\n\t[\"2.5.6.5\", \"organizationalUnit\"],\r\n\t[\"2.5.6.6\", \"person\"],\r\n\t[\"2.5.6.10\", \"residentialPerson\"],\r\n\t[\"1.3.6.1.1.3.1\", \"uidObject\"],\r\n]);\r\n\r\n/**\r\n * Map from RFC4519. Extract of AttributeType names with their corresponding OIDs.\r\n */\r\nexport default class AttributeTypeDictionary \r\n{\r\n\t/**\r\n\t * Gets the Attribute Type Name corresponding to an OID\r\n\t * @param {string} oid \r\n\t * @returns {string} - Returns the Attribute Type name if found, else the OID itself\r\n\t */\r\n\tstatic get(oid) \r\n\t{\r\n\t\tif(!defaultValues.has(oid)) \r\n\t\t{\r\n\t\t\treturn oid;\r\n\t\t}\r\n\t\treturn defaultValues.get(oid);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows to find an Atribute Type OID by its name\r\n\t * @param {string} value - Attribute Type name\r\n\t * @returns {(string|null)} Returns the Attribute Type OID or null if not found\r\n\t */\r\n\tstatic getOID(value) \r\n\t{\r\n\t\tfor(const [oid, val] of defaultValues) \r\n\t\t{\r\n\t\t\tif(val === value) \r\n\t\t\t{\r\n\t\t\t\treturn oid;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a new Attribute Type OID/Name pair\r\n\t * @param {string} oid - OID to set \r\n\t * @param {string} value - Name\r\n\t */\r\n\tstatic set(oid, value) \r\n\t{\r\n\t\tdefaultValues.set(oid, value);\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * Register multiple Attribute Type OID/Name entries\r\n\t * @param {Array<Array<string>>} entries - Array of entries that contains the [OID, name] pair\r\n\t */\r\n\tstatic register(entries) \r\n\t{\r\n\t\tfor(const [oid, value] of entries) \r\n\t\t{\r\n\t\t\tAttributeTypeDictionary.set(oid, value);\r\n\t\t}\r\n\t}\r\n}\r\n"],"file":"AttributeTypeDictionary.js"}